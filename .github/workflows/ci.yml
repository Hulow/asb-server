name: Continuous Integration

on:
  pull_request:

jobs:
  install-deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Cache dependencies
        uses: actions/cache@v3
        id: cache-deps
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('./package-lock.json') }}
      - name: Install locked dependencies
        run: npm install --frozen-lockfile

  lint:
    runs-on: ubuntu-latest
    needs: install-deps
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Restore cached dependencies
        uses: actions/cache@v3
        id: restore-deps
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('./package-lock.json') }}
      - name: Run Eslint
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: install-deps
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Restore cached dependencies
        uses: actions/cache@v3
        id: restore-deps
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('./package-lock.json') }}
      - name: Transpile
        run: npm run build
  unit-test:
    runs-on: ubuntu-latest
    needs: install-deps
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Restore cached dependencies
        uses: actions/cache@v3
        id: restore-deps
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('./package-lock.json') }}
      - name: Run unit tests
        run: npm run test:unit
  integration-test:
    runs-on: ubuntu-latest
    needs: install-deps
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: docker
          POSTGRES_PASSWORD: docker
          POSTGRES_DB: asb
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Restore cached dependencies
        uses: actions/cache@v3
        id: restore-deps
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('./package-lock.json') }}
      - name: Run database migrations
        run: npm run mig:run
      - name: Run integration tests
        run: npm run test:intg
